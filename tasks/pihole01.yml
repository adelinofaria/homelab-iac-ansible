---
# file: tasks/pihole01.yml
- name: Running pihole01.yml playbook
  when: ansible_hostname == 'pihole01'
  block:
    - name: Import role
      ansible.builtin.include_role:
        name: lxc

    # Install dependencies

    - name: Ensure curl is present
      ansible.builtin.apt:
        name: curl
        update_cache: true
        cache_valid_time: 3600 # One hour
        state: present

    # Install setup files

    - name: Create /etc/pihole if it does not exist
      ansible.builtin.file:
        path: /etc/pihole
        state: directory
        mode: '0644'

    - name: Copy setupVars.conf with owner and permissions
      ansible.builtin.copy:
        src: files/pihole/setupVars.conf
        dest: /etc/pihole/setupVars.conf
        mode: '0644'

    # Instalation script

    - name: Check pihole installation
      ansible.builtin.command: which pihole
      register: which_pihole_cmd_output
      changed_when: false
      failed_when: which_pihole_cmd_output.rc not in [0, 1]

    - name: Run script if pi-hole not installed
      when: which_pihole_cmd_output.rc not in [0]
      ansible.builtin.shell: curl -L https://install.pi-hole.net | bash /dev/stdin --unattended
      register: pihole_curl_install_shell_output
      changed_when: true
      failed_when: pihole_curl_install_shell_output.rc not in [0, 1]

    # Config files

    - name: Copy 99-edns.conf with owner and permissions
      ansible.builtin.copy:
        src: files/pihole/99-edns.conf
        dest: /etc/dnsmasq.d/99-edns.conf
        mode: '0644'
      register: ednsconf_file

    - name: Copy custom.list with owner and permissions
      ansible.builtin.copy:
        src: files/pihole/custom.list
        dest: /etc/pihole/custom.list
        mode: '0644'
      register: customlist_file

    - name: Restart pihole
      ansible.builtin.command: pihole restartdns
      when: ednsconf_file.changed and customlist_file.changed
