---
# file: roles/pve_qemu_img/tasks/main.yml
- name: Check if base image exists
  ansible.builtin.stat:
    path: "{{ qemu_base_image_dest }}"
  register:
    _pve_qemu_base_img_dest

- name: Download base image from source
  when: not _pve_qemu_base_img_dest.stat.exists
  ansible.builtin.get_url:
    url: "{{ qemu_base_image_remote_url }}"
    dest: "{{ qemu_base_image_dest }}"
    mode: '0644'
    checksum: "{{ qemu_base_image_checksum }}"

- name: Check if processed image exists
  ansible.builtin.stat:
    path: "{{ qemu_modified_image_dest }}"
  register:
    _qemu_img_dest

- name: Copy image to dest and resize
  when: not _qemu_img_dest.stat.exists
  block:
    - name: Copy src image
      ansible.builtin.copy:
        src: "{{ qemu_base_image_dest }}"
        dest: "{{ qemu_modified_image_dest }}"
        mode: '0644'
        remote_src: true
    - name: Resize image
      ansible.builtin.set_fact:
        _qemu_img_resize_cmd:
          "qemu-img resize {{ qemu_modified_image_dest }} 8G"


- name: Retrieve info about 666 vmid
  community.general.proxmox_vm_info:
    api_host: "{{ inventory_hostname }}"
    api_user: "{{ api_user }}"
    api_password: "{{ api_password }}"
    vmid: "{{ qemu_template_builder_vmid }}"
  register:
    _pve_vm_info

- name: Prompt confirmation for deletion
  when: _pve_vm_info.proxmox_vms | length
  block:
    - name: User prompt for deletion
      ansible.builtin.pause:
        prompt: "This will will destroy {{ _pve_vm_info.proxmox_vms[0].vmid }} vmid, are you sure (Yn)?"
      register: _prompt_confirmation

    - name: Stop container with prejudice
      when: _prompt_confirmation.user_input | lower != 'n'
      community.general.proxmox_kvm:
        api_host: "{{ inventory_hostname }}"
        api_user: "{{ api_user }}"
        api_password: "{{ api_password }}"
        vmid: "{{ qemu_template_builder_vmid }}"
        force: true
        state: stopped

    - name: Remove container
      when: _prompt_confirmation.user_input | lower != 'n'
      community.general.proxmox_kvm:
        api_host: "{{ inventory_hostname }}"
        api_user: "{{ api_user }}"
        api_password: "{{ api_password }}"
        vmid: "{{ qemu_template_builder_vmid }}"
        state: absent

- name: Create template vm
  community.general.proxmox_kvm:
    node: "{{ inventory_hostname }}"
    api_host: "{{ inventory_hostname }}"
    api_user: "{{ api_user }}"
    api_password: "{{ api_password }}"
    vmid: "{{ qemu_template_builder_vmid }}" # no vmid
    name: "{{ qemu_template_name }}"
    machine: q35
    ostype: l26
    bios: ovmf
    cores: 1
    sockets: 1
    memory: 2048
    boot: 'order=scsi0'
    efidisk0:
      storage: 'local-lvm'
      format: 'raw'
      efitype: 4m
      pre_enrolled_keys: 1
    serial:
      serial0: 'socket'
    vga: 'serial0'
    scsihw: 'virtio-scsi-single'
    scsi:
      scsi0: "local-lvm:0,iothread=1,discard=on,import-from={{ qemu_modified_image_dest }},format=raw"
    ide:
      ide2: "local-lvm:cloudinit,format=raw"
    net:
      net0: 'virtio,bridge=vmbr0,firewall=1'
    sshkeys: "{{ lookup('ansible.builtin.file', 'ssh-keys/homelab.pub') }}"
    template: true

- name: We stop here
  ansible.builtin.fail:

# - name: Import disk
#   community.general.proxmox_disk:
#     api_host: "{{ inventory_hostname }}"
#     api_user: "{{ api_user }}"
#     api_password: "{{ api_password }}"
#     vmid: "{{ qemu_template_builder_vmid }}"
#     storage: 'local-lvm:0'
#     disk: 'unused0'
#     import_from: "local:debian-12.6.0-amd64-DVD-1.iso"
#     # media: 'disk'
#     # iso_image: "local:{{ qemu_modified_image_dest }}"
#     state: present

- name: Import disk through cmd line
  ansible.builtin.command: "qm disk import {{ qemu_template_builder_vmid }} {{ qemu_modified_image_dest }} local-lvm"
  register: cmd_output
  changed_when: cmd_output.rc != 0 # <- Uses the return code to define when the task has changed.

# - name: Update scsihw:virtio-scsi-pci
#   community.general.proxmox_kvm:
#     node: "{{ inventory_hostname }}"
#     api_host: "{{ inventory_hostname }}"
#     api_user: "{{ api_user }}"
#     api_password: "{{ api_password }}"
#     vmid: "{{ qemu_template_builder_vmid }}"
#     name: "{{ qemu_template_name }}"
#     scsihw: 'virtio-scsi-pci'
#     virtio:
#       virtio0: "local-lvm:vm-{{ qemu_template_builder_vmid }}-disk-1"
#     update: true

- name: Setup disk for iso through cmd line
  ansible.builtin.command: "qm set {{ qemu_template_builder_vmid }} --scsihw virtio-scsi-pci --virtio0 local-lvm:vm-{{ qemu_template_builder_vmid }}-disk-1,discard=on" # noqa: yaml[line-length]
  register: cmd_output
  changed_when: cmd_output.rc != 0

- name: Update boot:order=virtio0
  community.general.proxmox_kvm:
    node: "{{ inventory_hostname }}"
    api_host: "{{ inventory_hostname }}"
    api_user: "{{ api_user }}"
    api_password: "{{ api_password }}"
    vmid: "{{ qemu_template_builder_vmid }}"
    boot: order=virtio0
    update: true

# - name: Setup boot order with virtio0
#   ansible.builtin.command: "qm set {{ qemu_template_builder_vmid }} --boot order=virtio0"
#   register: cmd_output
#   changed_when: cmd_output.rc != 0

# - name: Update ide2:local-lvm:cloudinit
#   community.general.proxmox_kvm:
#     node: "{{ inventory_hostname }}"
#     api_host: "{{ inventory_hostname }}"
#     api_user: "{{ api_user }}"
#     api_password: "{{ api_password }}"
#     vmid: "{{ qemu_template_builder_vmid }}"
#     ide:
#       ide2: 'local-lvm:cloudinit'
#     update: true

- name: Setup ide2 storage through cmd line
  ansible.builtin.command: "qm set {{ qemu_template_builder_vmid }} --ide2 local-lvm:cloudinit"
  register: cmd_output
  changed_when: cmd_output.rc != 0

# - name: Start vm
#   community.general.proxmox_kvm:
#     api_host: "{{ inventory_hostname }}"
#     api_user: "{{ api_user }}"
#     api_password: "{{ api_password }}"
#     vmid: "{{ qemu_template_builder_vmid }}"
#     state: started

- name: Copy setupVars.conf with owner and permissions
  ansible.builtin.copy:
    src: files/cloudinit/debian-12-generic-amd64-docker.yaml
    dest: /tmp/debian-12-generic-amd64-docker.yaml
    mode: '0644'

- name: Update ide2:local-lvm:cloudinit
  community.general.proxmox_kvm:
    node: "{{ inventory_hostname }}"
    api_host: "{{ inventory_hostname }}"
    api_user: "{{ api_user }}"
    api_password: "{{ api_password }}"
    vmid: "{{ qemu_template_builder_vmid }}"
    cicustom: 'vendor=local-lvm:/tmp/debian-12-generic-amd64-docker.yaml'
    tags: 'debian-template,debian-12,cloud-init,docker'
    sshkeys: "{{ lookup('ansible.builtin.file', 'ssh-keys/homelab.pub') }}"
    ipconfig:
      ipconfig0: 'ip=dhcp'
    update: true

- name: Convert vm to template
  community.general.proxmox_kvm:
    node: "{{ inventory_hostname }}"
    api_host: "{{ inventory_hostname }}"
    api_user: "{{ api_user }}"
    api_password: "{{ api_password }}"
    vmid: "{{ qemu_template_builder_vmid }}"
    state: template

# - name: Clone vm from template
#   community.general.proxmox_kvm:
#     node: "{{ inventory_hostname }}"
#     api_host: "{{ inventory_hostname }}"
#     api_user: "{{ api_user }}"
#     api_password: "{{ api_password }}"
#     vmid: "{{ qemu_template_builder_vmid }}"
#     clone: 'kekers'
#     newid: '220'
#     name: docker01
#     full: false

# What a fucking find son
# https://gist.github.com/jkkor/e3b7e086c02a2b63ef5ace740db8850c
