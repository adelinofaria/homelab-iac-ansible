---
# file: roles/proxmox_kvm_cloudinit_template/tasks/main.yml

- name: Check if base image for kvm template exists
  ansible.builtin.stat:
    path: "{{ proxmox_kvm_cloudinit_template_image_dest }}"
  register:
    _proxmox_kvm_cloudinit_template_image_dest

- name: Download base image for kvm template from source
  when: not _proxmox_kvm_cloudinit_template_image_dest.stat.exists
  ansible.builtin.get_url:
    url: "{{ proxmox_kvm_cloudinit_template_image_remote_url }}"
    dest: "{{ proxmox_kvm_cloudinit_template_image_dest }}"
    mode: '0644'
    checksum: "{{ proxmox_kvm_cloudinit_template_image_checksum }}"

- name: Retrieve kvm info - template kvm vmid-{{ proxmox_kvm_cloudinit_template_vmid }}
  community.general.proxmox_vm_info:
    api_host: "{{ proxmox_kvm_cloudinit_template_api_host }}"
    api_user: "{{ proxmox_kvm_cloudinit_template_api_user }}"
    api_password: "{{ proxmox_kvm_cloudinit_template_api_password }}"
    vmid: "{{ proxmox_kvm_cloudinit_template_vmid }}"
  register:
    _proxmox_kvm_cloudinit_template_vm_info

#################################################################################
#                                                                               #
#                      Delete existing the kvm template                         #
#                                                                               #
#################################################################################

- name: Deletion block
  when: false # disabled step
  # when: _proxmox_kvm_cloudinit_template_vm_info.proxmox_vms | length
  block:
    - name: Stop kvm with prejudice - template kvm vmid-{{ proxmox_kvm_cloudinit_template_vmid }}
      community.general.proxmox_kvm:
        api_host: "{{ proxmox_kvm_cloudinit_template_api_host }}"
        api_user: "{{ proxmox_kvm_cloudinit_template_api_user }}"
        api_password: "{{ proxmox_kvm_cloudinit_template_api_password }}"
        vmid: "{{ proxmox_kvm_cloudinit_template_vmid }}"
        force: true
        state: stopped

    - name: Remove kvm - template kvm vmid-{{ proxmox_kvm_cloudinit_template_vmid }}
      community.general.proxmox_kvm:
        api_host: "{{ proxmox_kvm_cloudinit_template_api_host }}"
        api_user: "{{ proxmox_kvm_cloudinit_template_api_user }}"
        api_password: "{{ proxmox_kvm_cloudinit_template_api_password }}"
        vmid: "{{ proxmox_kvm_cloudinit_template_vmid }}"
        state: absent

#################################################################################
#                                                                               #
#                     Creating the KVM Template groundwork                      #
#                                                                               #
#################################################################################

- name: Retrieve kvm info - template kvm vmid-{{ proxmox_kvm_cloudinit_template_vmid }}
  community.general.proxmox_vm_info:
    api_host: "{{ proxmox_kvm_cloudinit_template_api_host }}"
    api_user: "{{ proxmox_kvm_cloudinit_template_api_user }}"
    api_password: "{{ proxmox_kvm_cloudinit_template_api_password }}"
    vmid: "{{ proxmox_kvm_cloudinit_template_vmid }}"
  register:
    _proxmox_kvm_cloudinit_template_vm_info

- name: Creating kvm template block
  when: not (_proxmox_kvm_cloudinit_template_vm_info.proxmox_vms | length)
  block:

    - name: Add template kvm vmid-{{ proxmox_kvm_cloudinit_template_vmid }}
      community.general.proxmox_kvm:
        node: "{{ proxmox_kvm_cloudinit_template_node }}"
        api_host: "{{ proxmox_kvm_cloudinit_template_api_host }}"
        api_user: "{{ proxmox_kvm_cloudinit_template_api_user }}"
        api_password: "{{ proxmox_kvm_cloudinit_template_api_password }}"
        vmid: "{{ proxmox_kvm_cloudinit_template_vmid }}"
        name: "{{ proxmox_kvm_cloudinit_template_name }}"
        machine: q35
        ostype: l26
        bios: ovmf
        cpu: x86-64-v2-AES
        cores: 1
        sockets: 1
        memory: 1024
        agent: 'enabled=1'
        boot: 'order=scsi0'
        serial:
          serial0: socket
        vga: serial0
        ide:
          ide2: "local-lvm:cloudinit"
        net:
          net0: 'virtio,bridge=vmbr0'
        ipconfig:
          ipconfig0: 'ip=dhcp'
        sshkeys: "{{ lookup('ansible.builtin.file', 'ssh-keys/homelab.pub') }}"
        template: true

    #################################################################################
    #                                                                               #
    #       Importing cloud-init cloud image that is unavailable in the GUI         #
    #                                                                               #
    #################################################################################

    # Haven't had any success with this command through community.general.proxmox_disk module
    # and this feature isn't available anywhere in the GUI. So we're just doing it through cmd line.
    - name: Import the cloud image as disk, through cmd line - template kvm vmid-{{ proxmox_kvm_cloudinit_template_vmid }}
      ansible.builtin.command:
        "qm disk import {{ proxmox_kvm_cloudinit_template_vmid }} {{ proxmox_kvm_cloudinit_template_image_dest }} local-lvm -format qcow2"
      register: cmd_output
      changed_when: cmd_output.rc != 0 # <- Uses the return code to define when the task has changed.

    # When disk is imported, it's still unused as unused0, we need to attach to a disk (e.g. virtio0)
    - name: Attach imported disk disk to the vm using VirtIO SCSI - template kvm vmid-{{ proxmox_kvm_cloudinit_template_vmid }}
      community.general.proxmox_kvm:
        node: "{{ proxmox_kvm_cloudinit_template_node }}"
        api_host: "{{ proxmox_kvm_cloudinit_template_api_host }}"
        api_user: "{{ proxmox_kvm_cloudinit_template_api_user }}"
        api_password: "{{ proxmox_kvm_cloudinit_template_api_password }}"
        vmid: "{{ proxmox_kvm_cloudinit_template_vmid }}"
        name: "{{ proxmox_kvm_cloudinit_template_name }}"
        scsihw: 'virtio-scsi-pci'
        virtio:
          virtio0: "local-lvm:vm-{{ proxmox_kvm_cloudinit_template_vmid }}-disk-0,iothread=1"
        update_unsafe: true
        update: true

    # The initial disk is only 2GB, thus we make it larger 8G
    - name: Cloud image disk resize - template kvm vmid-{{ proxmox_kvm_cloudinit_template_vmid }}
      community.general.proxmox_disk:
        api_host: "{{ proxmox_kvm_cloudinit_template_api_host }}"
        api_user: "{{ proxmox_kvm_cloudinit_template_api_user }}"
        api_password: "{{ proxmox_kvm_cloudinit_template_api_password }}"
        vmid: "{{ proxmox_kvm_cloudinit_template_vmid }}"
        name: "{{ proxmox_kvm_cloudinit_template_name }}"
        disk: virtio0
        size: 8G
        state: resized
